name: Terraform Plan

on:
  push:
    branches:
      - dev
      - staging
      - main

env:
  TF_VERSION: 1.8.0
  TF_WORKING_DIR: terraform

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Prepare Directory
        run: mkdir -p ${{ env.TF_WORKING_DIR }}

      - name: Write GCP credentials to file safely
        run: |
          echo "${{ secrets.GOOGLE_CREDENTIALS }}" | base64 --decode > gcp-key.json

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Init Terraform
        run: terraform init

      - name: Generate tfvars file dynamically
        run: |
          echo "gcp_project=\"${{ secrets.GOOGLE_PROJECT }}\"" > env.tfvars
          echo "gcp_region=\"${{ secrets.GOOGLE_REGION }}\"" >> env.tfvars

          if [[ "${{ github.ref_name }}" == "dev" ]]; then
            echo "gke_cluster_name=\"${{ secrets.DEV_CLUSTER_NAME }}\"" >> env.tfvars
            echo "gke_node_count=${{ secrets.DEV_NODE_COUNT }}" >> env.tfvars
          elif [[ "${{ github.ref_name }}" == "staging" ]]; then
            echo "gke_cluster_name=\"${{ secrets.STAGING_CLUSTER_NAME }}\"" >> env.tfvars
            echo "gke_node_count=${{ secrets.STAGING_NODE_COUNT }}" >> env.tfvars
          else
            echo "gke_cluster_name=\"${{ secrets.PROD_CLUSTER_NAME }}\"" >> env.tfvars
            echo "gke_node_count=${{ secrets.PROD_NODE_COUNT }}" >> env.tfvars
          fi

      - name: Terraform Plan
        run: terraform plan -var-file=env.tfvars
