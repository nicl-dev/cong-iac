name: Terraform Plan + Apply

on:
  push:
    branches:
      - "**"

env:
  TF_VERSION: 1.8.0
  TF_BACKEND_BUCKET: cong-iac-terraform-state

jobs:
  plan:
    name: Terraform Plan (${{ matrix.environment }})
    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment: [dev, staging, prod]

    defaults:
      run:
        working-directory: terraform/environments/${{ matrix.environment }}

    outputs:
      environment: ${{ steps.set-output-env.outputs.env }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Credentials
        run: |
          echo "${{ secrets.GOOGLE_CREDENTIALS }}" | base64 --decode > gcp-key.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=$PWD/gcp-key.json" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: |
          terraform init -no-color \
            -backend-config="bucket=${{ env.TF_BACKEND_BUCKET }}" \
            -backend-config="prefix=gke/${{ matrix.environment }}"

      - name: Terraform Plan
        run: terraform plan -no-color -out=tfplan-${{ matrix.environment }}-${{ github.sha }}.out

      - name: Verify Plan File Exists
        run: |
          if [ ! -f "tfplan-${{ matrix.environment }}.out" ]; then
            echo "Plan file missing"; exit 1
          fi

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ matrix.environment }}-${{ github.sha }}
          path: terraform/environments/${{ matrix.environment }}/tfplan-${{ matrix.environment }}-${{ github.sha }}.out

      - name: Save output env
        id: set-output-env
        run: echo "env=${{ matrix.environment }}" >> $GITHUB_OUTPUT

  apply:
    name: Terraform Apply (${{ matrix.environment }})
    needs: plan
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment: [dev, staging, prod]

    environment: ${{ matrix.environment != 'dev' && format('{0}', matrix.environment) || null }}

    defaults:
      run:
        working-directory: terraform/environments/${{ matrix.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Credentials
        run: |
          echo "${{ secrets.GOOGLE_CREDENTIALS }}" | base64 --decode > gcp-key.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=$PWD/gcp-key.json" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan-${{ matrix.environment }}-${{ github.sha }}
          path: terraform/environments/${{ matrix.environment }}

      - name: Terraform Init
        run: |
          terraform init -no-color \
            -backend-config="bucket=${{ env.TF_BACKEND_BUCKET }}" \
            -backend-config="prefix=gke/${{ matrix.environment }}"

      - name: Terraform Apply
        run: terraform apply -no-color tfplan-${{ matrix.environment }}.out
