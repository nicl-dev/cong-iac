name: Terraform CI/CD

on:
  push:
    branches: [main]
  workflow_dispatch: # <- ermöglicht manuelles Auslösen über GitHub UI

env:
  TF_VERSION: "1.8.0"
  TF_WORKING_DIR: "./terraform"

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}
    steps:
      - uses: actions/checkout@v3
      - run: mkdir -p ${{ env.TF_WORKING_DIR }}
      - run: echo "${{ secrets.GOOGLE_CREDENTIALS }}" > gcp-key.json
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
      - run: terraform init
      - run: terraform fmt -check
      - run: terraform validate
      - run: terraform plan -var="gcp_project=${{ secrets.GOOGLE_PROJECT }}" -var="gcp_region=${{ secrets.GOOGLE_REGION }}" -out=tfplan
      - name: Upload Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: ${{ env.TF_WORKING_DIR }}/tfplan

  apply:
    name: Terraform Apply (manual)
    needs: plan
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}
    steps:
      - uses: actions/checkout@v3
      - run: mkdir -p ${{ env.TF_WORKING_DIR }}
      - run: echo "${{ secrets.GOOGLE_CREDENTIALS }}" > gcp-key.json
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
      - run: terraform init
      - name: Download Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: ${{ env.TF_WORKING_DIR }}
      - run: terraform apply tfplan
