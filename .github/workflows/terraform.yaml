name: Terraform Plan + Apply

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - main

env:
  TF_VERSION: 1.8.0
  TF_BACKEND_BUCKET: cong-iac-terraform-state

permissions:
  id-token: write
  contents: read
  security-events: write

jobs:
  plan:
    name: Terraform Plan (${{ matrix.environment }})
    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment: [dev, staging, prod]

    defaults:
      run:
        working-directory: terraform/environments/${{ matrix.environment }}

    outputs:
      environment: ${{ steps.set-output-env.outputs.env }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Authenticate to GCP via Workload Identity Federation
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Set up TFLint
        uses: terraform-linters/setup-tflint@v1
        with:
          tflint_version: v0.50.3

      - name: Run TFLint
        run: tflint --recursive

      - name: Install Checkov
        run: pip install checkov

      - name: Run Checkov
        run: checkov -d .

      - name: Upload Checkov SARIF Results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: terraform/environments/${{ matrix.environment }}/checkov.sarif

      - name: Terraform Init
        run: |
          terraform init -no-color \
            -backend-config="bucket=${{ env.TF_BACKEND_BUCKET }}" \
            -backend-config="prefix=gke/${{ matrix.environment }}"

      - name: Terraform Plan
        run: terraform plan -no-color -out=tfplan-${{ matrix.environment }}-${{ github.sha }}.out

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-${{ matrix.environment }}-${{ github.sha }}
          path: terraform/environments/${{ matrix.environment }}/tfplan-${{ matrix.environment }}-${{ github.sha }}.out

      - name: Save output env
        id: set-output-env
        run: echo "env=${{ matrix.environment }}" >> $GITHUB_OUTPUT

  apply:
    name: Terraform Apply (${{ matrix.environment }})
    needs: plan
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment: [dev, staging, prod]

    environment: ${{ matrix.environment }}

    defaults:
      run:
        working-directory: terraform/environments/${{ matrix.environment }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Authenticate to GCP via Workload Identity Federation
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan-${{ matrix.environment }}-${{ github.sha }}
          path: terraform/environments/${{ matrix.environment }}

      - name: Terraform Init
        run: |
          terraform init -no-color \
            -backend-config="bucket=${{ env.TF_BACKEND_BUCKET }}" \
            -backend-config="prefix=gke/${{ matrix.environment }}"

      - name: Terraform Apply
        run: terraform apply -no-color tfplan-${{ matrix.environment }}-${{ github.sha }}.out
