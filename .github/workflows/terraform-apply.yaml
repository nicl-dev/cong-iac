name: Terraform Apply

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Welche Umgebung soll deployed werden?"
        required: true
        type: choice
        options:
          - dev
          - staging
          - prod

env:
  TF_VERSION: 1.8.0
  TF_WORKING_DIR: terraform
  TF_BACKEND_BUCKET: cong-iac-terraform-state

jobs:
  apply:
    name: Terraform Apply - ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    if: github.ref == 'refs/heads/main'

    defaults:
      run:
        working-directory: terraform/environments/${{ github.event.inputs.environment }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Prepare Directory
        run: mkdir -p ${{ env.TF_WORKING_DIR }}

      - name: Write GCP credentials to file safely
        run: |
          echo "${{ secrets.GOOGLE_CREDENTIALS }}" | base64 --decode > gcp-key.json

      - name: Export ADC credentials
        run: echo "GOOGLE_APPLICATION_CREDENTIALS=$PWD/gcp-key.json" >> $GITHUB_ENV

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: |
          terraform init \
            -no-color \
            -backend-config="bucket=${{ env.TF_BACKEND_BUCKET }}" \
            -backend-config="prefix=gke/${{ github.event.inputs.environment }}"

      - name: Download Terraform Plan
        uses: actions/download-artifact@v3
        with:
          name: tfplan-${{ github.event.inputs.environment }}
          path: terraform/environments/${{ github.event.inputs.environment }}

      - name: Terraform Apply
        run: terraform apply -no-color tfplan-${{ github.event.inputs.environment }}-${{ github.event.inputs.commit_sha }}
