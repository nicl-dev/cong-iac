name: Terraform Apply (manual)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Welche Umgebung soll deployed werden?"
        required: true
        default: "prod"
        type: choice
        options:
          - dev
          - staging
          - prod

env:
  TF_VERSION: 1.8.0
  TF_WORKING_DIR: terraform

jobs:
  apply:
    name: Apply to Selected Environment
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.environment }}
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare directory
        run: mkdir -p ${{ env.TF_WORKING_DIR }}

      - name: Write GCP credentials to file safely
        run: |
          echo "${{ secrets.GOOGLE_CREDENTIALS }}" | base64 --decode > gcp-key.json

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Init Terraform
        run: terraform init

      - name: Generate tfvars file based on environment input
        run: |
          echo "gcp_project=\"${{ secrets.GOOGLE_PROJECT }}\"" > env.tfvars
          echo "gcp_region=\"${{ secrets.GOOGLE_REGION }}\"" >> env.tfvars

          if [[ "${{ github.event.inputs.environment }}" == "dev" ]]; then
            echo "gke_cluster_name=\"${{ secrets.DEV_CLUSTER_NAME }}\"" >> env.tfvars
            echo "gke_node_count=${{ secrets.DEV_NODE_COUNT }}" >> env.tfvars
          elif [[ "${{ github.event.inputs.environment }}" == "staging" ]]; then
            echo "gke_cluster_name=\"${{ secrets.STAGING_CLUSTER_NAME }}\"" >> env.tfvars
            echo "gke_node_count=${{ secrets.STAGING_NODE_COUNT }}" >> env.tfvars
          else
            echo "gke_cluster_name=\"${{ secrets.PROD_CLUSTER_NAME }}\"" >> env.tfvars
            echo "gke_node_count=${{ secrets.PROD_NODE_COUNT }}" >> env.tfvars
          fi

      - name: Terraform Apply
        run: terraform apply -auto-approve -var-file=env.tfvars
